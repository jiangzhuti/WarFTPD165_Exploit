#include "widget.h"
#include <QHBoxLayout>
#include <QVBoxLayout>

Widget::Widget(QWidget *parent)
    : QWidget(parent)
{
    pb_exploit = new QPushButton(tr("Exploit!"));
    le_host   = new QLineEdit();
    le_port    = new QLineEdit();
    te_result  = new QTextEdit();
    te_custom  = new QTextEdit();
    cb_custom  = new QCheckBox(tr("Use Custom String"));

    le_port->setText("21");
    te_custom->setEnabled(false);

    QHBoxLayout *hl1, *hl2;
    QVBoxLayout *main_vl;
    hl1 = new QHBoxLayout;
    hl2 = new QHBoxLayout;
    main_vl = new QVBoxLayout;
    hl1->addWidget(new QLabel(tr("Host Name:")));
    hl1->addWidget(le_host);
    hl1->addWidget(new QLabel(tr("Port:")));
    hl1->addWidget(le_port);
    hl1->addWidget(cb_custom);
    hl1->addWidget(pb_exploit);
    hl2->addWidget(te_custom);
    hl2->addWidget(te_result);
    main_vl->addLayout(hl1);
    main_vl->addLayout(hl2);

    setLayout(main_vl);

    connect(pb_exploit, &QPushButton::clicked,
            [this](){
                te_result->clear();
                exp.set_host(le_host->text());
                exp.set_port(le_port->text().toInt());
                if (cb_custom->checkState() == Qt::Checked) {
                    QString custom_str = te_custom->toPlainText();
                    exp.do_exploit(custom_str.toStdString().data());
                } else {
                    exp.do_exploit(nullptr);
                }
            });
    connect(cb_custom, &QCheckBox::stateChanged,
            [this](int state) {
                if (state == Qt::Checked) {
                    te_custom->setEnabled(true);
                } else {
                    te_custom->setEnabled(false);
                }
            });
    connect(&exp, &ward165exp::new_result, te_result, &QTextEdit::append);
}

Widget::~Widget()
{

}
